version: "3.7"
services:
  nginx:
    build: ./frontend
    container_name: nginx
    ports:
      - "80:80" # only for nginx redirect to 443
      - "443:443" # webapp over tls
    networks:
      - corona-net
    command: /bin/sh -c "envsubst '$$DOMAIN $$CERTIFICATE_PATH' < /nginx.conf.template > /etc/nginx/conf.d/corona-atlas.conf && cat /etc/nginx/conf.d/corona-atlas.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - corona-atlas-backend
    volumes:
      - type: bind # certificate renewal doesn't require rebuilding the image
        source: /etc/letsencrypt
        target: /etc/letsencrypt
    restart: unless-stopped
    environment:
      - DOMAIN=${DOMAIN} # used to encrypt session cookies
      - CERTIFICATE_PATH=${CERTIFICATE_PATH}
  corona-atlas-backend:
    build: ./backend
    container_name: corona-atlas-backend
    networks:
      corona-net:
        aliases:
          - backend
    environment:
      - SESSION_SECRET_KEY=${SESSION_SECRET_KEY} # used to encrypt session cookies
      - DB_CREATION_CREDS=${DB_CREATION_CREDS}
      - DB_READ_CREDS=${DB_READ_CREDS}
      - AWS_ID=${AWS_ID}
      - AWS_KEY=${AWS_KEY}
      - BASE_URL=${BASE_URL}
    depends_on:
      - corona-atlas-database
    restart: unless-stopped
  corona-atlas-database:
    image: postgres:12.2
    container_name: corona-atlas-database
    networks:
      corona-net:
        aliases:
          - db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # used to encrypt session cookies
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: corona_volume
        target: /var/lib/postgresql/data
    restart: unless-stopped
networks:
  corona-net:
volumes:
  corona_volume:
